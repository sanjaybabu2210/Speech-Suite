<!DOCTYPE html>
<html lang="">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>S</title>
    <style> body {padding: 0; margin: 0;} </style>
	  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
	  <script src="https://cdn.jsdelivr.net/gh/gitbrent/pptxgenjs@3.1.0/dist/pptxgen.bundle.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
	  <script src="https://cdn.jsdelivr.net/npm/p5@0.10.2/lib/p5.js"></script>
	  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    <style>
		body{
			background-color:#e6ffe6;
		}
		.notepad{
			border: 3px solid black;
			background-color:#e6ffff ;
			width:800px;
			margin:10%;
			height:500px;
		}
	 	.image {
    width: 100%; /* or any custom size */
    max-height:400px;
		
    object-fit: contain;
	size:cover;
			margin-bottom:10%;
}
		.Block{
			display:block;
		}
		.None{
			display:none;
		}
		.newbord{
			
		}
		.template1{
			
		}
		.template2{
			
		}
		.template3{
			
		}
		.template4{
			
		}
		.template5{
			
		}
	  </style>
 </head>
  <body>
	  
   
  



<!-- <div class="words">

</div> -->
<h2 align="center" style="margin-top:60px;">SPEECH SUITE</h2><br><br>
<div align="center">
<textarea  style="text-align:center;border-radius:20%;" id="val" rows="20" cols="50"></textarea>
	
<br><button id="start" class="btn btn-primary" style="margin-bottom:20px;">I'm Speaking</button>
	<!-- <button onclick="p5wiki()">Wikipedia</button> -->
	
	<p style="margin-bottom:10px">
		<input id="userInput" style="width:400px;"  /><button  onclick="doit();">
		Speech
		</button>
	</p>
	<p id="synonyms">
		
	</p>
<p id="para">
	
	</p>

	<% for(var i =1; i<100 ;i++){ %>
	
	<div id="slider<%= i %>" class="container">
		<h1 id="heads"></h1>
		<h3>
			
		</h3>
		<img id="image" class="image"/>
		<p id="about">
			
		</p>
		
	</div>
	
<%    };  %>
</div>
	
<script>

	
	var words ={make:0,decrease:0,save:0};
	var  out_make = new Array();
	var  out_save = new Array();
	var  out_decrease = new Array();
  var SpeechRecognition = window.webkitSpeechRecognition;
  var recognition = new SpeechRecognition();
  recognition.interinResults = true;
  /*let p = document.createElement('p'); 
  const words = document.querySelector('.words');
  words.appendChild(p); */
  let val = '';
	let pptx = new PptxGenJS();
  let total_slides = 0;
  let current_slide = 1;
	let k=0;
	let padding = 0;
let height = 100;
	let slide_image = new Array();
	let slide = new Array();
for(let j=0; j<25; j++){
				slide_image[j] = ' ';
				
			}
var command;
	function doit()
	{
	//**********************************************************************************************************************************************
	command = document.querySelector('#userInput').value;
		x = command.split(" ");
	
	for(var i=0;i < x.length ;i++){
	//keys("decrease");
	
		
		
		
		var y = x.slice(0,x.length);
		
	
	
		if((x[i] == "make" || words['make']!=-1 )&& ( (y.includes("PPT")) || (y.includes("ppt")) )){      //make ppt
		
			  if(total_slides>0){
				//do nothing
			}
			else{
				total_slides++;

			}
			  var result = "make powerpoint";
			  console.log("result: " + result);
			console.log('#slider'+current_slide);
			  $('#slider'+current_slide).addClass("notepad");
		}
	}
	for(var i=0;i < x.length ;i++){
		if((x[i] == "next" || words['next']!=-1 )&& (y.includes("slide"))){                     //next slide
			total_slides++;
			$('#slider'+current_slide).css("box-shadow","0px 0px white");
				current_slide++;
			  var result = "new slide";
			  console.log("result: " + result);
			  $('#slider'+current_slide).addClass("notepad");
			 
			 
		}
	}
	// for(var i=0;i < x.length ;i++){
	// 	if(x[i] == "next" && x[i+1]== "slide"){                     //next slide
	// 		 	 total_slides++;
	// 		$('#slider'+i).css("box-shadow","0px 0px white");
	// 			current_slide++;
	// 		  var result = "new slide";
	// 		  console.log("result: " + result);
	// 		  $('#slider'+current_slide).addClass("notepad");
			 
			 
	// 	}
	// }
		for(var i =0;i<100;i++){
			if(i == current_slide){
				$('#slider'+i).css("box-shadow","8px 12px #ff6666");
			}else{
				$('#slider'+i).css("box-shadow","0px 0px white");
			}
		}
	  for (var i=0;i<x.length;i++){
		  if (x[i] == "add" && x[i+1]=="border")
			  {
				  $('#slider'+current_slide).addClass("border"); 
			  }
	  }

	for(var i=0;i < x.length ;i++){
		if(x[i] == "previous" && x[i+1]== "slide"){                   //previous slide
			$('#slider'+current_slide).css("box-shadow","0px 0px white");
			current_slide--;
			$('#slider'+current_slide).css("box-shadow","8px 12px #ff6666");
			  var result = "previous slide";
			  console.log("result: " + result);
		}
		if(x[i]== "add" && x[i+1] == "background" && x[i+2] =="colour" ){
			 var color = x[i+3];
			$('#slider'+current_slide).css("background",color);
			
			
		}
	
	}
		
	for(var i=0;i < x.length ;i++){                                   //write text
		if(x[i] == "write" && x[i+1]== "text"){                      
			  goWiki(x.slice(i+2).join(" "));
			  var result = "write about";
			  console.log("result: " + result);
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "add" && x[i+1]== "image"){                   //add image
			var r = load(x.slice(i+2).join(" "), k);
			  var result = "add image";
			console.log("hi");
			console.log(r);
			//slide[current_slide-1].addImage({ path:r, x:1, y:1, w:6, h:4 });
			//slide_image[current_slide-1] = String(r);
			  console.log("result: " + result);
			
		}
		if((x[i] == "decrease" && x[i+1]== "height") || (x[i] == "decrease" && x[i+1]== "size") ){                 //decrease height
			height = height - 10;
			document.querySelector('#slider'+current_slide+' #image').height=document.querySelector('#slider'+current_slide+' #image').height-20;
			//$('#slider'+current_slide+' #image').css("height",height+'%')
		}
		if(x[i] == "increase" && x[i+1]== "height"){                 //increase height
		
			height = height + 10;
			document.querySelector('#slider'+current_slide+' #image').height=document.querySelector('#slider'+current_slide+' #image').height+20;
			//$('#slider'+current_slide+' #image').css("height",height+'%')
		}
		if(x[i] == "move" && x[i+1]== "down"){                 //move down
		
		
			$('#slider'+current_slide+' #image').css("transform","translate(0px,20px)");
		}
		if(x[i] == "move" && x[i+1]== "up"){      //move up
			
			$('#slider'+current_slide+' #image').css("transform","translate(0px,-10px)")
		}
		if(x[i] == "move" && x[i+1]== "left"){      //move left
			
			$('#slider'+current_slide+' #image').css("transform","translate(-50px,0px)")
		}
		if(x[i] == "move" && x[i+1]== "right"){     //move right
			
			$('#slider'+current_slide+' #image').css("transform","translate(50px,0px)")
		}
		if(x[i] == "add" && x[i+1]== "good" && x[i+2] ==  "border"){      //add good border
			
			$('#slider'+current_slide+' #image').addClass("newbord");
		}
	
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "change" && x[i+1]== "image"){                   //change image
			k++;
			var url = load(x.slice(i+2).join(" "), k);
			slide_image[current_slide-1] = url;
			  var result = "add image";
			  console.log("result: " + result);
			document.querySelector('#slider'+current_slide+' #image').classList.add('Block');
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "delete" && x[i+1]== "image"){                   //delete image
			document.querySelector('#slider'+current_slide+' #image').classList.add('None');
			slide_image[current_slide-1] = ' ';
			  var result = "delete image";
			  console.log("result: " + result);
			
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "add" && x[i+1]== "heading"){                     //add heading
			console.log(x[i+2]);
	
            document.querySelector('#slider'+current_slide+' #heads').innerHTML = x.slice(i+2).join(" ");
			//console.log(document.querySelector('#slider['+current_slide+'] #heads').innerHTML);
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "delete" && x[i+1]== "heading"){                 //delete heading
			console.log(x[i+2]);
            $('#slider'+current_slide+' #heads').innerHTML = null;
		}
	}
	  
	  	for(var i=0;i < x.length ;i++){
			 if(x[i] == "save" && x[i+1]== "PPT"){                 //save ppt
				  
				
			let slide = new Array();
			for(let j=0; j<total_slides; j++){
				slide[j] = pptx.addSlide();

				let textboxText = document.getElementById('heads').innerHTML;
				let textboxOpts = { x: 1, y: 1, align: "center", color: "363636", fill: "f1f1f1" };
				if(slide_image[j]!=' '){
				//slide[j].addImage({path:slide_image[j]});
					console.log(slide_image[j]);
				slide[j].addImage({path:slide_image[j], x:1, y:1, w:8.0, h:4.0 });
				}
				slide[j].addText(textboxText, textboxOpts);
			}
			pptx.writeFile("Sample Presentation");

		}
	}
	  
	console.log(x);
  // if(e.results[0].isFinal){
  //   /*p = document.createElement('p');
  //   words.append(p);*/
  //   document.getElementById('val').value = val;
  // };
		document.getElementById('val').value = '\n'+command+document.getElementById('val').value;
	//*********************************************************************************************************************************************
	}
  recognition.addEventListener('result', e => 
  {
  
  const trns = Array.from(e.results).map(result => result[0]).map(result => result.transcript).join(' ');
  console.log(trns);
  //p.textContent = trns;
  val = val + '\r\n' + trns + ' ';
	  
	  //Need to change sentences to command
	  command = trns;
	  console.log(command);
	  
	  
	x = command.split(" ");
	  
	for(var i=0;i < x.length ;i++){
	keys("decrease");
	
		
		
		
		var y = x.slice(0,x.length);
		
	
	
		if((x[i] == "make" || words['make']!=-1 )&& (y.includes("PPT"))){ 
			
			//make ppt
		
			  total_slides++;
			  var result = "make powerpoint";
			  console.log("result: " + result);
			console.log('#slider'+current_slide);
			  $('#slider'+current_slide).addClass("notepad");
		}
	}
	// for(var i=0;i < x.length ;i++){
	// 	if(x[i] == "next" && x[i+1]== "slide"){                     //next slide
	// 		 	 total_slides++;
	// 			current_slide++;
	// 		  var result = "new slide";
	// 		  console.log("result: " + result);
	// 		$('#slider'+current_slide).css("color","blue");
	// 		  $('#slider'+current_slide).addClass("notepad");
			
	// 	}
	// }
	  for (var i=0;i<x.length;i++){
		  if (x[i] == "add" && x[i+1]=="border")
			  {
				  $('#slider'+current_slide).addClass("border"); 
			  }
	  }
	 
	for(var i=0;i < x.length ;i++){
		if(x[i] == "previous" && x[i+1]== "slide"){                   //previous slide
			  current_slide--;
			  var result = "previous slide";
			  console.log("result: " + result);
		}
	}
	for(var i=0;i < x.length ;i++){                                   //write text
		if(x[i] == "write" && x[i+1]== "text"){                      
			  goWiki(x.slice(i+2).join(" "));
			  var result = "write about";
			  console.log("result: " + result);
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "add" && x[i+1]== "image"){                   //add image
			var r = load(x.slice(i+2).join(" "), k);
			  var result = "add image";
			console.log("hi");
			console.log(r);
			//slide[current_slide-1].addImage({ path:r, x:1, y:1, w:6, h:4 });
			//slide_image[current_slide-1] = String(r);
			  console.log("result: " + result);
			
		}
		if((x[i] == "decrease" && x[i+1]== "height") || (x[i] == "decrease" && x[i+1]== "size") ){                 //decrease height
			height = height - 10;
			$('#slider'+current_slide+' #image').css("height",height+'%')
		}
		if(x[i] == "increase" && x[i+1]== "height"){                 //increase height
		
			height = height + 10;
			$('#slider'+current_slide+' #image').css("height",height+'%')
		}
		if(x[i] == "move" && x[i+1]== "down"){                 //move down
		
			padding = padding + 20;
			$('#slider'+current_slide+' #image').css("padding-top",padding+'px')
		}
	
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "change" && x[i+1]== "image"){                   //change image
			k++;
			var url = load(x.slice(i+2).join(" "), k);
			slide_image[current_slide-1] = url;
			  var result = "add image";
			  console.log("result: " + result);
			document.querySelector('#slider'+current_slide+' #image').classList.add('Block');
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "delete" && x[i+1]== "image"){                   //delete image
			document.querySelector('#slider'+current_slide+' #image').classList.add('None');
			slide_image[current_slide-1] = ' ';
			  var result = "delete image";
			  console.log("result: " + result);
			
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "add" && x[i+1]== "heading"){                     //add heading
			console.log(x[i+2]);
	
            document.querySelector('#slider'+current_slide+' #heads').innerHTML = x.slice(i+2).join(" ");
			//console.log(document.querySelector('#slider['+current_slide+'] #heads').innerHTML);
		}
	}
	for(var i=0;i < x.length ;i++){
		if(x[i] == "delete" && x[i+1]== "heading"){                 //delete heading
			console.log(x[i+2]);
            $('#slider'+current_slide+' #heads').innerHTML = null;
		}
	}
	  
	  	for(var i=0;i < x.length ;i++){
			 if(x[i] == "save" && x[i+1]== "PPT"){                 //save ppt
				  
				
			let slide = new Array();
			for(let j=0; j<total_slides; j++){
				slide[j] = pptx.addSlide();

				let textboxText = document.getElementById('heads').innerHTML;
				let textboxOpts = { x: 1, y: 1, align: "center", color: "363636", fill: "f1f1f1" };
				if(slide_image[j]!=' '){
				//slide[j].addImage({path:slide_image[j]});
					console.log(slide_image[j]);
				slide[j].addImage({path:slide_image[j], x:1, y:1, w:8.0, h:4.0 });
				}
				slide[j].addText(textboxText, textboxOpts);
			}
			pptx.writeFile("Sample Presentation");

		}
	}
	  
	console.log(x);
  if(e.results[0].isFinal){
    /*p = document.createElement('p');
    words.append(p);*/
    document.getElementById('val').value = val;
  }; 
});
  recognition.addEventListener('end',recognition.start);
  $('#start').on('click', function(){recognition.start()});
  //recognition.start();

function load(a, n){
                var API_KEY = '15151126-aa0947b85bd5378813fb2324f';
                var URL = "https://pixabay.com/api/?key="+API_KEY+"&q="+encodeURIComponent(a)+"&image_type=photo&pretty=true";
                $.getJSON(URL, function(data){
                    if (parseInt(data.totalHits) > 0 ){
						let url;
						url = data.hits[k].largeImageURL;
                        //$.each(data.hits, function(i, hit){ console.log(hit.largeImageURL); });
                        //document.getElementById( 'image'+current_slide ).src=data.hits[0].largeImageURL;
						document.querySelector('#slider'+current_slide+' #image').src=url;
						slide_image[current_slide-1] = url;
						return url;
					}
					else{
						console.log('No hits');
					}
                        
				
                });
	
}

	
function wikipedia(){
	//var url = "https://en.wikipedia.org/w/api.php?format=json&action=query&prop=extracts&exintro&explaintext&redirects=1&titles=box";
	var a = 'dog';
	var url = "http://en.wikipedia.org/w/api.php?action=query&list=search&srsearch="+encodeURIComponent(a)+"&format=json";
	$.getJSON(url, function(data){
		console.log(data);
	});
}
	function wiki(){
		var searchTerm = 'dog';
		var url = "https://en.wikipedia.org/w/api.php?action=opensearch&search="+searchTerm+"&format=json&callback=?";
		$.ajax({
			url:url,
			type:'GET',
			datatype:'json',
			data:function(data, status, jqXHR){console.log(data);},
			success:function(){console.log('success');}
		});
	}
	function setup(){
		var searchTerm = 'dog';
		var url = "https://en.wikipedia.org/w/api.php?action=opensearch&search="+searchTerm+"&format=json&callback=?";
		userInput = select('#userInput');
		

		loadJSON(url, skip, 'jsonp');
	}
	/*function p5wiki(){
		var searchTerm = 'dog';
		var url = "https://en.wikipedia.org/w/api.php?action=opensearch&search="+searchTerm+"&format=json&callback=?";
		//var url = "https://en.wikipedia.org/w/api.php?action=query&prop=revisions&rvprop=content&rvsection=0&titles="+searchTerm;
		loadJSON(url, gotData, 'jsonp');
	}*/
	function skip(data){
		//do nothing
	}/*
	function gotData(data){
		console.log(data[3][0]);
		var newurl = data[3][0];
		
		
	}*/
	
	//wikipedia
	function goWiki(w){
 let term = userInput.value();
		term=w;
		var searchurl = 'https://en.wikipedia.org/w/api.php?action=opensearch&format=json&search=';
  let url=searchurl+term;
  loadJSON(url, gotData, 'jsonp');
}

function gotData(data){
  let title = data[1][0];
  title =  title.replace(/\s+/g, '_');
  createP(title);
	var contenturl = 'https://en.wikipedia.org/w/api.php?action=query&prop=revisions&rvprop=content&format=json&titles=';
  let curl = contenturl + title;
  loadJSON(curl, gotContent, 'jsonp');
}

function gotContent(data){
  let page = data.query.pages;
  let pageId = Object.keys(data.query.pages)[0];
  let content = page[pageId].revisions[0]['*'];
//console.log(content.slice(1005, 1398));
  // createP(content);
  let reg = /\]{4}[\s]*.*/g;
	reg = /^\b.*/g;
  var words = content.match(reg);
  words = content.slice(1005,1398);
	document.querySelector('#slider'+current_slide+' #about').innerHTML = words;
	console.log(words);
}
	//wikipedia
	
	
	
	
	
	
	
	
	
	
	
	

function process(result) {
 
  for (key in result.response) {
    list = result.response[key].list;
	  var cut = list.synonyms.indexOf('|')
	  var ws = list.synonyms.slice(0,cut);
	  
    out_decrease.push(ws);
	  
	  
  }
	for(var i=0;i<100;i++){
		
		if(out_make.indexOf(x[i]) != -1){
			words['make'] = 1;
		}
		
	}
	for(var i=0;i<100;i++){
		
		if(out_save.indexOf(x[i]) != -1){
			words['save'] = 1;
		}
	
	}
	for(var i=0;i<100;i++){
		
		if(out_decrease.indexOf(x[i]) != -1){
			words['decrease'] = 1;
		}
		
	}
			

	

}
	
function keys(word){

var s = document.createElement("script");
s.src = "https://thesaurus.altervista.org/thesaurus/v1?word="+ word + "&language=en_US&output=json&key=GzCOH7WfqKstNDZD10aK&callback=process"; // NOTE: replace test_only with your own KEY
document.getElementsByTagName("head")[0].appendChild(s);
	


}

</script>

  </body>
</html>